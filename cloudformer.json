{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "vpc040dfb7e": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.31.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true"
      }
    },
    "subnetcf3cccf1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.64.0/20",
        "AvailabilityZone": "us-east-1e",
        "VpcId": {
          "Ref": "vpc040dfb7e"
        }
      }
    },
    "subnet1b8fe214": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.48.0/20",
        "AvailabilityZone": "us-east-1f",
        "VpcId": {
          "Ref": "vpc040dfb7e"
        }
      }
    },
    "subnet3d22805a": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.0.0/20",
        "AvailabilityZone": "us-east-1a",
        "VpcId": {
          "Ref": "vpc040dfb7e"
        }
      }
    },
    "subnet27a6d66d": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.16.0/20",
        "AvailabilityZone": "us-east-1c",
        "VpcId": {
          "Ref": "vpc040dfb7e"
        }
      }
    },
    "subnetfc3a95d2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.80.0/20",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc040dfb7e"
        }
      }
    },
    "subnetc27fd29e": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.32.0/20",
        "AvailabilityZone": "us-east-1d",
        "VpcId": {
          "Ref": "vpc040dfb7e"
        }
      }
    },
    "igw2c547a54": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    "dopt8af868f1": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "ec2.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "acl966d31ec": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc040dfb7e"
        }
      }
    },
    "rtb13b41e6c": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc040dfb7e"
        }
      }
    },
    "eip1821312550": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": [
        "gw2"
      ],
      "Properties": {
        "Domain": "vpc"
      }
    },
    "instancei0419ece2482605aff": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-f9d10f86",
        "InstanceType": "t2.micro",
        "KeyName": "devnenv-key",
        "Monitoring": "false",
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnetfc3a95d2"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "172.31.83.34",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgdevenvsg"
              }
            ]
          }
        ]
      }
    },
    "instancei05f58542b0c3544bf": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "IamInstanceProfile": "arn:aws:iam::148544798893:instance-profile/aws-elasticbeanstalk-ec2-role",
        "ImageId": "ami-2d360152",
        "InstanceType": "t2.micro",
        "KeyName": "ec2-practice",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ec2-mf-practice"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet27a6d66d"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "172.31.20.184",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sglaunchwizard1"
              }
            ]
          }
        ]
      }
    },
    "s3mjfloggingbucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "VersioningConfiguration": {
          "Status": "Suspended"
        }
      }
    },
    "s3mjfstarterapp": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "index.html"
        },
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3mjfloggingbucket"
          },
          "LogFilePrefix": "starter"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        }
      }
    },
    "sgcloudformerpracticeWebServerSecurityGroupMGY17IMIZETX": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTPS access via port 443",
        "VpcId": {
          "Ref": "vpc040dfb7e"
        }
      }
    },
    "sglaunchwizard1": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "launch-wizard-1 created 2018-08-02T12:23:32.467-04:00",
        "VpcId": {
          "Ref": "vpc040dfb7e"
        }
      }
    },
    "sgdevenvsg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "security group for development environment",
        "VpcId": {
          "Ref": "vpc040dfb7e"
        }
      }
    },
    "sgdefault": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": {
          "Ref": "vpc040dfb7e"
        }
      }
    },
    "dbsgdefault": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "GroupDescription": "default"
      }
    },
    "s3policymjfstarterapp": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3mjfstarterapp"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PublicReadGetObject",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "s3mjfstarterapp"
                    },
                    "/*"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "acl3": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl966d31ec"
        }
      }
    },
    "acl4": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl966d31ec"
        }
      }
    },
    "subnetacl7": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl966d31ec"
        },
        "SubnetId": {
          "Ref": "subnet27a6d66d"
        }
      }
    },
    "subnetacl8": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl966d31ec"
        },
        "SubnetId": {
          "Ref": "subnetcf3cccf1"
        }
      }
    },
    "subnetacl9": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl966d31ec"
        },
        "SubnetId": {
          "Ref": "subnet1b8fe214"
        }
      }
    },
    "subnetacl10": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl966d31ec"
        },
        "SubnetId": {
          "Ref": "subnet3d22805a"
        }
      }
    },
    "subnetacl11": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl966d31ec"
        },
        "SubnetId": {
          "Ref": "subnetfc3a95d2"
        }
      }
    },
    "subnetacl12": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl966d31ec"
        },
        "SubnetId": {
          "Ref": "subnetc27fd29e"
        }
      }
    },
    "gw2": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc040dfb7e"
        },
        "InternetGatewayId": {
          "Ref": "igw2c547a54"
        }
      }
    },
    "route2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb13b41e6c"
        },
        "GatewayId": {
          "Ref": "igw2c547a54"
        }
      },
      "DependsOn": "gw2"
    },
    "dchpassoc2": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc040dfb7e"
        },
        "DhcpOptionsId": {
          "Ref": "dopt8af868f1"
        }
      }
    },
    "assoc2": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "eip1821312550",
            "AllocationId"
          ]
        },
        "InstanceId": {
          "Ref": "instancei05f58542b0c3544bf"
        }
      }
    },
    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgcloudformerpracticeWebServerSecurityGroupMGY17IMIZETX"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress6": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard1"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress7": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdevenvsg"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress8": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgdefault"
        },
        "SourceSecurityGroupOwnerId": "148544798893"
      }
    },
    "egress5": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgcloudformerpracticeWebServerSecurityGroupMGY17IMIZETX"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress6": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard1"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress7": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdevenvsg"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress8": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "practice with ec2"
}